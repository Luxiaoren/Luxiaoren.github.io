{"version":3,"sources":["logo.svg","common/left.js","article/intron/index.js","article/reactfirst/index.js","App.js","serviceWorker.js","store/index.js","index.js"],"names":["module","exports","__webpack_require__","p","Left","SubMenu","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","mode","theme","list","changeMode","value","setState","changeTheme","react_default","a","createElement","className","menu","style","width","defaultSelectedKeys","defaultOpenKeys","Item","key","Link","to","pathname","map","item","idx","path","name","React","Component","connect","dispatch","Intron","prop","init","article","content","_this2","axios","get","then","res","console","log","data","title","time","src","alt","Rectfirst","id","match","params","concat","App","BrowserRouter","common_left","Switch","Route","exact","component","Reactfirst","Boolean","window","location","hostname","createStore","objectSpread","store","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5878064c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\r\n\r\nimport { Menu, Icon, Switch } from 'antd';\r\n\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport {connect} from 'react-redux'\r\n\r\n\r\nimport  '../style/left.less'\r\n\r\nconst { SubMenu } = Menu;\r\n\r\nclass Left extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n    state = {\r\n        mode: 'inline',\r\n        theme: 'light',\r\n        list:[]\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState({\r\n            list:this.props.list\r\n        })\r\n    }\r\n\r\n    changeMode = (value) => {\r\n        this.setState({\r\n            mode: value ? 'vertical' : 'inline',\r\n        });\r\n    }\r\n\r\n    changeTheme = (value) => {\r\n        this.setState({\r\n            theme: value ? 'dark' : 'light',\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='left'>\r\n\r\n                <Menu\r\n                    style={{ width: 256 }}\r\n                    defaultSelectedKeys={['1']}\r\n                    defaultOpenKeys={['sub1']}\r\n                    mode={this.state.mode}\r\n                    theme={this.state.theme}\r\n                >\r\n                    <Menu.Item key=\"1\">\r\n                        <Link to={{\r\n                            pathname:'/'\r\n                        }}>前言</Link>\r\n\r\n                    </Menu.Item>\r\n                    {/*<Menu.Item key=\"2\">*/}\r\n                        {/*<Link to={{*/}\r\n                            {/*pathname:'/reactfirst'*/}\r\n                        {/*}}> react初体验</Link>*/}\r\n\r\n                    {/*</Menu.Item>*/}\r\n                    {this.state.list.map((item,idx)=>{\r\n                        return (\r\n                            <Menu.Item key={idx+3}>\r\n                                <Link to={{\r\n                                    pathname:item.path\r\n                                }}> {item.name}</Link>\r\n                            </Menu.Item>\r\n                        )\r\n                    })}\r\n                    {/*<SubMenu key=\"sub1\" title={<span><span>Navigation Three</span></span>}>*/}\r\n                        {/*<Menu.Item key=\"3\">Option 3</Menu.Item>*/}\r\n                        {/*<Menu.Item key=\"4\">Option 4</Menu.Item>*/}\r\n                        {/*<SubMenu key=\"sub1-2\" title=\"Submenu\">*/}\r\n                            {/*<Menu.Item key=\"5\">Option 5</Menu.Item>*/}\r\n                            {/*<Menu.Item key=\"6\">Option 6</Menu.Item>*/}\r\n                        {/*</SubMenu>*/}\r\n                    {/*</SubMenu>*/}\r\n                    {/*<SubMenu key=\"sub2\" title={<span><span>Navigation Four</span></span>}>*/}\r\n                        {/*<Menu.Item key=\"7\">Option 7</Menu.Item>*/}\r\n                        {/*<Menu.Item key=\"8\">Option 8</Menu.Item>*/}\r\n                        {/*<Menu.Item key=\"9\">Option 9</Menu.Item>*/}\r\n                        {/*<Menu.Item key=\"10\">Option 10</Menu.Item>*/}\r\n                    {/*</SubMenu>*/}\r\n                </Menu>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport  default  connect(state =>{\r\n    return {\r\n        list:state.list\r\n    }\r\n},dispatch =>{\r\n    return {\r\n\r\n    }\r\n})(Left);","import React, { Component } from 'react';\r\nimport '../../style/intron.less'\r\nimport {getVisit} from \"../../ajax/api\";\r\nimport axios from 'axios'\r\nclass Intron extends Component {\r\n    constructor(prop){\r\n        super(prop)\r\n        this.init()\r\n        this.state={\r\n            article:{\r\n                content:[]\r\n            }\r\n        }\r\n    }\r\n     componentDidMount(){\r\n        axios.get('/source/first.json').then((res)=>{\r\n            console.log(res.data.content)\r\n            this.setState({\r\n                article:res.data\r\n            })\r\n        });\r\n        // res = JSON.parse(res.data)\r\n        // res = JSON.parse(res);\r\n\r\n    }\r\n    init(){\r\n\r\n    }\r\n    render(){\r\n        return (\r\n            <div className='intron'>\r\n\r\n                <h1>{this.state.article.title}</h1>\r\n                <h3>{this.state.article.time}</h3>\r\n                <div className='intron-content'>\r\n                     { this.state.article.content.map((item,idx)=>{\r\n                        return (\r\n                            item[0]!== '/' ? <p key={idx}>{item}</p> : <img src={item} key={idx} alt=\"\"/>\r\n                        )\r\n                    })}\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Intron","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux'\r\nimport axios from 'axios'\r\n\r\nclass Rectfirst extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            article:{\r\n                content:[]\r\n            }\r\n        }\r\n        this.init()\r\n    }\r\n    init(){\r\n        this.id = this.props.match.params.id\r\n\r\n        console.log(this.props.match.params.id)\r\n        console.log(connect)\r\n    }\r\n    componentDidMount(){\r\n        console.log(this.props.list)\r\n        console.log(this.props.match.params.id)\r\n        this.id = this.props.match.params.id\r\n\r\n        axios.get(`/source/${this.id}.json`).then((res)=>{\r\n            console.log(res.data.content)\r\n            this.setState({\r\n                article:res.data\r\n            })\r\n        });\r\n    }\r\n    componentWillUpdate(){\r\n        // console.log(this.props.match.params.id)\r\n        // this.id = this.props.match.params.id\r\n        //\r\n        // axios.get('/source/first.json').then((res)=>{\r\n        //     console.log(res.data.content)\r\n        //     this.setState({\r\n        //         article:res.data\r\n        //     })\r\n        // });\r\n    }\r\n    render(){\r\n        return (\r\n            <div className='intron'>\r\n\r\n                <h1>{this.state.article.title}</h1>\r\n                <h3>{this.state.article.time}</h3>\r\n                <div className='intron-content'>\r\n                    { this.state.article.content.map((item,idx)=>{\r\n                        return (\r\n                            item[0]!== '/' ? <p key={idx}>{item}</p> : <img src={item} key={idx} alt=\"\"/>\r\n                        )\r\n                    })}\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst initMapStateToProps = state =>{\r\n    return {\r\n        list:state.list\r\n    }\r\n}\r\nconst initMapDispatchToProps = dispatch =>{\r\n    return {\r\n\r\n    }\r\n}\r\n\r\nexport default  connect(initMapStateToProps,initMapDispatchToProps)(Rectfirst);","import React, {Component} from 'react';\nimport logo from './logo.svg';\nimport {Button} from 'antd';\nimport './App.css';\nimport Left from './common/left'\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\nimport Intron from './article/intron'\nimport Reactfirst from './article/reactfirst'\nimport {getVisit} from './ajax/api'\nimport {connect} from 'react-redux'\n\nimport './style/intron.less'\n\nclass App extends Component {\n    constructor(prop) {\n        super(prop)\n        this.init()\n    }\n    init() {\n        // let res = getVisit({\n        //     visit:true\n        // })\n    }\n    componentDidMount(){\n        console.log(this.props.list,'app')\n    }\n\n    render() {\n        return (\n            <Router>\n                <div className=\"App\">\n                    <Left/>\n                    <Switch>\n                        <Route exact path='/' component={Intron}/>\n                        <Route path='/:id' component={Reactfirst}/>\n                    </Switch>\n                </div>\n            </Router>\n\n        );\n    }\n}\n\nconst initMapStateToProps = (state) =>{\n    console.log(state,'ssssss')\n    return {\n        list:state.list\n    }\n}\nconst initMapDispatchToProps = dispatch =>{\n    return {\n\n    }\n}\n\nexport default  connect(initMapStateToProps,initMapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {createStore,combineReducers} from 'redux'\r\n\r\nlet  state = {\r\n    list : [\r\n        {\r\n            path:'/reactfirst',\r\n            name:'react项目搭建'\r\n        },\r\n        {\r\n            path:'/reduxbase',\r\n            name:'redux介绍'\r\n        }\r\n    ]\r\n}\r\n\r\nlet reducer = function () {\r\n    return {\r\n        ...state\r\n    }\r\n}\r\nexport  default createStore(reducer,state);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter,Route} from 'react-router-dom'\nimport store from './store'\nimport {Provider} from 'react-redux'\n\nconsole.log(store,'store')\nReactDOM.render(\n    <Provider store={store}>\n            <App />\n    </Provider>\n    ,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}